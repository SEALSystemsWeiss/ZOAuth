<?xml version="1.0" encoding="utf-16"?>
<CLAS CLSNAME="ZCL_OAUTH" VERSION="1" LANGU="E" DESCRIPT="OAuth + HTTP helper" UUID="000C2924C4D21ED082B6F9C976611300" CATEGORY="00" EXPOSURE="0" STATE="1" RELEASE="0" AUTHOR="SE38_UWE" CREATEDON="20100819" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <publicSection>class ZCL_OAUTH definition
  public
  final
  create private .

*&quot;* public components of class ZCL_OAUTH
*&quot;* do not include other source files here!!!
public section.

  class-methods GET_INSTANCE
    importing
      !CONSUMER_NAME type ZOAUTH_CONSUMER_NAME optional
      !SCREEN_NAME type STRING optional
      !PASSWORD type STRING optional
    returning
      value(RO_OAUTH) type ref to ZCL_OAUTH
    raising
      ZCX_OAUTH_ERROR .
  class-methods SET_CONSUMER_PERS
    importing
      !CONSUMER_NAME type ZOAUTH_CONSUMER_NAME optional
      !OAUTH_CONSUMER_KEY type ZOAUTH_CONSUMER_KEY
      !OAUTH_CONSUMER_SECRET type ZOAUTH_CONSUMER_SECRET
      !SIGNATURE_METHOD type ZOAUTH_SIGNATURE_METHOD
      !API_HOST type ZOAUTH_API_HOST
      !API_PROTOCOL type ZOAUTH_API_PROTOCOL .
  methods READ_CONSUMER_PERS
    importing
      !CONSUMER_NAME type ZOAUTH_CONSUMER_NAME optional
    raising
      ZCX_OAUTH_ERROR .
  methods GET_CONSUMER_KEY
    returning
      value(OAUTH_CONSUMER_KEY) type STRING .
  methods GET_CONSUMER_SECRET
    returning
      value(OAUTH_CONSUMER_SECRET) type STRING .
  methods GET_SIGNATURE_METHOD
    returning
      value(SIGNATURE_METHOD) type ZOAUTH_SIGNATURE_METHOD .
  methods GET_API_HOST
    returning
      value(API_HOST) type ZOAUTH_API_HOST .
  methods SET_API_HOST
    importing
      !API_HOST type STRING .
  methods GET_API_PROTOCOL
    returning
      value(API_PROTOCOL) type ZOAUTH_API_PROTOCOL .
  methods SIGN_MESSAGE
    importing
      !METHOD type STRING default &apos;POST&apos; .
  methods SET_OAUTH_URL
    importing
      !OAUTH_URL type STRING .
  methods GET_OAUTH_URL
    returning
      value(OAUTH_URL) type STRING .
  methods SET_OAUTH_SECRET
    importing
      !OAUTH_SECRET type STRING .
  methods GET_OAUTH_SECRET
    returning
      value(OAUTH_SECRET) type STRING .
  methods SET_PARAMETERS
    importing
      !PARAMETERS type ZOAUTH_KEY_VALUE_T .
  methods GET_PARAMETERS
    returning
      value(PARAMETERS) type ZOAUTH_KEY_VALUE_T .
  methods GET_OAUTH_SIGNATURE
    returning
      value(OAUTH_SIGNATURE) type STRING .
  methods GET_OAUTH_TOKEN
    returning
      value(OAUTH_TOKEN) type STRING .
  methods SET_OAUTH_TOKEN
    importing
      !OAUTH_TOKEN type STRING .
  methods GET_OAUTH_TOKEN_SECRET
    returning
      value(OAUTH_TOKEN_SECRET) type STRING .
  methods SET_OAUTH_TOKEN_SECRET
    importing
      !OAUTH_TOKEN_SECRET type STRING .
  methods SET_USER_PERS
    importing
      !CONSUMER_NAME type ZOAUTH_CONSUMER_NAME optional
      !SCREEN_NAME type STRING
      !PASSWORD type STRING optional
      !OAUTH_TOKEN type STRING
      !OAUTH_TOKEN_SECRET type STRING .
  methods READ_USER_PERS
    importing
      !CONSUMER_NAME type ZOAUTH_CONSUMER_NAME optional
      !SCREEN_NAME type STRING
      !PASSWORD type STRING optional
    raising
      ZCX_OAUTH_ERROR .
  methods APPEND_OAUTH_PARAMETERS .
  methods FETCHURL
    importing
      !HOST type STRING optional
      !URL type STRING
      !METHOD type STRING default &apos;POST&apos;
      !ACCEPT_XML type BOOLEAN optional
      !CONTENT_TYPE_XML type BOOLEAN optional
      !CDATA type STRING optional
    returning
      value(RESPONSE_DATA) type STRING
    raising
      ZCX_OAUTH_ERROR .
  methods IS_AUTHORIZED
    returning
      value(RESULT) type BOOLEAN .
  methods CREATE_TIMESTAMP
    returning
      value(TIMESTAMP) type STRING .
  methods CREATE_NONCE
    importing
      !LENGTH type I
    returning
      value(NONCE) type STRING .
  methods CREATE_BASESTRING
    importing
      !METHOD type STRING default &apos;POST&apos;
    returning
      value(BASESTRING) type STRING .
  methods PERCENT_ENCODE
    importing
      !UNESCAPED type STRING
    returning
      value(ESCAPED) type STRING .
  methods CREATE_HTTP_BODY .
  methods SIGN_MESSAGE_JS
    importing
      !METHOD type STRING default &apos;POST&apos; .
  methods CHECK_RESPONSE
    importing
      !RESPONSE type STRING
    raising
      ZCX_OAUTH_ERROR .
  methods SIGN_MESSAGE_HMAC
    importing
      !METHOD type STRING default &apos;POST&apos; .</publicSection>
 <protectedSection>*&quot;* protected components of class ZCL_TWA_OATH
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
 <privateSection>*&quot;* private components of class ZCL_OAUTH
*&quot;* do not include other source files here!!!
private section.

  class-data OAUTH type ref to ZCL_OAUTH .
  data OAUTH_CONSUMER_KEY type STRING .
  data OAUTH_CONSUMER_SECRET type STRING .
  data SIGNATURE_METHOD type ZOAUTH_SIGNATURE_METHOD .
  data API_HOST type ZOAUTH_API_HOST .
  data API_PROTOCOL type ZOAUTH_API_PROTOCOL .
  data OAUTH_URL type STRING .
  data OAUTH_SECRET type STRING .
  data OAUTH_TOKEN type STRING .
  data OAUTH_SIGNATURE type STRING .
  data PARAMETERS type ZOAUTH_KEY_VALUE_T .
  data OAUTH_TOKEN_SECRET type STRING .
  data JS_SOURCE type STRING .
  data SCREEN_NAME type STRING .
  data HTTP_BODY type STRING .

  class-methods COPYRIGHT .
  methods CONSTRUCTOR
    importing
      !CONSUMER_NAME type ZOAUTH_CONSUMER_NAME optional
      !SCREEN_NAME type STRING optional
      !PASSWORD type STRING optional
    preferred parameter SCREEN_NAME
    raising
      ZCX_OAUTH_ERROR .
  methods PREPARE_JAVASCRIPT_SOURCE .
  methods HMAC_FUNCTION_EXISTS
    returning
      value(RV_RESULT) type BOOLEAN .</privateSection>
 <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
 <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="API_HOST" VERSION="1" LANGU="E" DESCRIPT="OAuth: API host" EXPOSURE="0" STATE="1" EDITORDER="5 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZOAUTH_API_HOST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="API_PROTOCOL" VERSION="1" LANGU="E" DESCRIPT="OAuth: API protocol" EXPOSURE="0" STATE="1" EDITORDER="6 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZOAUTH_API_PROTOCOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="HTTP_BODY" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="15 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="JS_SOURCE" VERSION="1" LANGU="E" DESCRIPT="Javascript source (obsolet)" EXPOSURE="0" STATE="1" EDITORDER="13 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="OAUTH" VERSION="1" LANGU="E" DESCRIPT="OAuth + HTTP helper" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_OAUTH" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="OAUTH_CONSUMER_KEY" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="OAUTH_CONSUMER_SECRET" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="OAUTH_SECRET" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="8 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="OAUTH_SIGNATURE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="10 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="OAUTH_TOKEN" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="9 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="OAUTH_TOKEN_SECRET" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="12 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="OAUTH_URL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="PARAMETERS" VERSION="1" LANGU="E" DESCRIPT="OAuth: HTTP Parameter table" EXPOSURE="0" STATE="1" EDITORDER="11 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZOAUTH_KEY_VALUE_T" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="SCREEN_NAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="14 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH" CMPNAME="SIGNATURE_METHOD" VERSION="1" LANGU="E" DESCRIPT="OAuth: Signature Method" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZOAUTH_SIGNATURE_METHOD" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="APPEND_OAUTH_PARAMETERS" VERSION="1" LANGU="E" DESCRIPT="Append obligatory OAuth parameters" EXPOSURE="2" STATE="1" EDITORDER="24 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <source>method APPEND_OAUTH_PARAMETERS.

  FIELD-SYMBOLS: &lt;parameter&gt; TYPE zjson_key_value.

  INSERT INITIAL LINE INTO TABLE parameters ASSIGNING &lt;parameter&gt;.
  &lt;parameter&gt;-key = &apos;oauth_consumer_key&apos;.                   &quot;#EC NOTEXT
  &lt;parameter&gt;-value = get_consumer_key( ).

  INSERT INITIAL LINE INTO TABLE parameters ASSIGNING &lt;parameter&gt;.
  &lt;parameter&gt;-key = &apos;oauth_nonce&apos;.                          &quot;#EC NOTEXT
  &lt;parameter&gt;-value = create_nonce( 8 ).

  INSERT INITIAL LINE INTO TABLE parameters ASSIGNING &lt;parameter&gt;.
  &lt;parameter&gt;-key = &apos;oauth_signature_method&apos;.               &quot;#EC NOTEXT
  CASE get_signature_method( ).
    WHEN 0.
      &lt;parameter&gt;-value = &apos;PLAINTEXT&apos;.                      &quot;#EC NOTEXT
    WHEN 1.
      &lt;parameter&gt;-value = &apos;HMAC-SHA1&apos;.                      &quot;#EC NOTEXT
    WHEN OTHERS.
  ENDCASE.

  INSERT INITIAL LINE INTO TABLE parameters ASSIGNING &lt;parameter&gt;.
  &lt;parameter&gt;-key = &apos;oauth_timestamp&apos;.                      &quot;#EC NOTEXT
  &lt;parameter&gt;-value = create_timestamp( ).

  INSERT INITIAL LINE INTO TABLE parameters ASSIGNING &lt;parameter&gt;.
  &lt;parameter&gt;-key = &apos;oauth_token&apos;.                          &quot;#EC NOTEXT
  &lt;parameter&gt;-value = get_oauth_token( ).

  INSERT INITIAL LINE INTO TABLE parameters ASSIGNING &lt;parameter&gt;.
  &lt;parameter&gt;-key = &apos;oauth_version&apos;.                        &quot;#EC NOTEXT
  &lt;parameter&gt;-value = &apos;1.0&apos;.                                &quot;#EC NOTEXT

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="CHECK_RESPONSE" VERSION="1" LANGU="E" DESCRIPT="Check response" EXPOSURE="2" STATE="1" EDITORDER="33 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="CHECK_RESPONSE" SCONAME="RESPONSE" VERSION="1" LANGU="E" DESCRIPT="JSON Key/Value pairs (hashed)" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <exception CLSNAME="ZCL_OAUTH" CMPNAME="CHECK_RESPONSE" SCONAME="ZCX_OAUTH_ERROR" VERSION="1" LANGU="E" DESCRIPT="Twitter API Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000"/>
  <source>METHOD check_response.

  DATA: json_doc TYPE REF TO zcl_json_document
      , error_text TYPE string
      .

  json_doc = zcl_json_document=&gt;create_with_json( response ).
  error_text = json_doc-&gt;get_value( &apos;error&apos; ).

  IF error_text IS NOT INITIAL.
    RAISE EXCEPTION TYPE zcx_oauth_error
      EXPORTING
        textid           = zcx_oauth_error=&gt;api_error
        oauth_error_text = error_text.
  ENDIF.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="CONSTRUCTOR" SCONAME="CONSUMER_NAME" VERSION="1" LANGU="E" DESCRIPT="OAuth: Consumer Name" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_CONSUMER_NAME" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="CONSTRUCTOR" SCONAME="SCREEN_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X" PARPREFERD="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="CONSTRUCTOR" SCONAME="PASSWORD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <exception CLSNAME="ZCL_OAUTH" CMPNAME="CONSTRUCTOR" SCONAME="ZCX_OAUTH_ERROR" VERSION="1" LANGU="E" DESCRIPT="Twitter API Error" MTDTYPE="2" EDITORDER="1 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000"/>
  <source>method CONSTRUCTOR.

  &quot;*--- prepare Javascript if SecureStore not exists in current release yet ---*
  IF hmac_function_exists( ) IS INITIAL.
    prepare_javascript_source( ).                           &quot;&lt; 7.01
  ENDIF.

  &quot;*--- use OAuth ---*
  IF screen_name IS NOT INITIAL.

    &quot;*--- get consumer credentials ---*
    read_consumer_pers( consumer_name ).

    &quot;*--- get user credentials ---*
    read_user_pers(
      EXPORTING
        consumer_name = consumer_name
        screen_name   = screen_name
        password      = password
        ).

    me-&gt;screen_name = screen_name.

  ELSE.
    &quot;*--- set default values ---*
    me-&gt;api_protocol = 1.     &quot;http

  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="COPYRIGHT" VERSION="1" LANGU="E" DESCRIPT="Readme: Copyright" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <source>method COPYRIGHT.

*--------------------------------------------------------------------*
*
* The OAuth library (Part of &quot;Twibap: The ABAP Twitter API&quot;)
* Copyright (C) 2010 Uwe Fetzer + SAP Developer Network members
*
* Project home: https://cw.sdn.sap.com/cw/groups/twibap
*
* Published under the Terms of use of SAP Code Exchange:
* http://www.sdn.sap.com/irj/sdn/code-exchange
*
*--------------------------------------------------------------------*

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="CREATE_BASESTRING" VERSION="1" LANGU="E" DESCRIPT="Create basestring" EXPOSURE="2" STATE="1" EDITORDER="29 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="CREATE_BASESTRING" SCONAME="METHOD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PARVALUE="&apos;POST&apos;"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="CREATE_BASESTRING" SCONAME="BASESTRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method CREATE_BASESTRING.

  DATA: key_value TYPE string
      , url       TYPE string
      .

  FIELD-SYMBOLS: &lt;parameter&gt; TYPE LINE OF zoauth_key_value_t.

  url = percent_encode( me-&gt;oauth_url ).

  CONCATENATE
    method
    &apos;&amp;&apos;
    url
    &apos;&amp;&apos;
  INTO basestring.

  LOOP AT me-&gt;parameters
    ASSIGNING &lt;parameter&gt;.

    CONCATENATE
      &lt;parameter&gt;-key
      &apos;=&apos;
      &lt;parameter&gt;-value
    INTO key_value.

    IF sy-tabix &lt;&gt; LINES( me-&gt;parameters ).
      CONCATENATE
        key_value
        &apos;&amp;&apos;
      INTO key_value.
    ENDIF.

    key_value = percent_encode( key_value ).

    CONCATENATE
      basestring
      key_value
    INTO basestring.

  ENDLOOP.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="CREATE_HTTP_BODY" VERSION="1" LANGU="E" DESCRIPT="Create http body" EXPOSURE="2" STATE="1" EDITORDER="31 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <source>method CREATE_HTTP_BODY.

  FIELD-SYMBOLS: &lt;parameter&gt; TYPE LINE OF zoauth_key_value_t.

  LOOP AT me-&gt;parameters
    ASSIGNING &lt;parameter&gt;.

    CONCATENATE
      me-&gt;http_body
      &lt;parameter&gt;-key
      &apos;=&apos;
      &lt;parameter&gt;-value
    INTO me-&gt;http_body.

    IF sy-tabix &lt; LINES( me-&gt;parameters ).
      CONCATENATE
        me-&gt;http_body
        &apos;&amp;&apos;
      INTO me-&gt;http_body.
    ENDIF.
  ENDLOOP.

  IF me-&gt;oauth_signature IS NOT INITIAL.
    me-&gt;oauth_signature = percent_encode( me-&gt;oauth_signature ).

    CONCATENATE
      me-&gt;http_body
      &apos;&amp;oauth_signature=&apos;
      me-&gt;oauth_signature
    INTO http_body.
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="CREATE_NONCE" VERSION="1" LANGU="E" DESCRIPT="Create random nonce" EXPOSURE="2" STATE="1" EDITORDER="28 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="CREATE_NONCE" SCONAME="LENGTH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="CREATE_NONCE" SCONAME="NONCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method CREATE_NONCE.

  CONSTANTS: chars TYPE string
               VALUE &apos;0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz&apos;.

  DATA: rnd TYPE i.

  DO length TIMES.

    CALL FUNCTION &apos;QF05_RANDOM_INTEGER&apos;
      EXPORTING
        ran_int_max = 60
        ran_int_min = 0
      IMPORTING
        ran_int     = rnd.

    CONCATENATE
      nonce
      chars+rnd(1)
    INTO nonce.

  ENDDO.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="CREATE_TIMESTAMP" VERSION="1" LANGU="E" DESCRIPT="Create timestamp" EXPOSURE="2" STATE="1" EDITORDER="27 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="CREATE_TIMESTAMP" SCONAME="TIMESTAMP" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method CREATE_TIMESTAMP.

  CONSTANTS: unix TYPE d VALUE &apos;19700101&apos;. &quot;Unix&apos; birthday

  DATA: timestamp_i TYPE i
      , diff TYPE i
      .

  GET TIME.
  diff = sy-tzone.   &quot;diff to UTC in secs
  IF sy-dayst = &apos;X&apos;. &quot;daylight saving active?
    ADD 3600 TO diff.
  ENDIF.

  timestamp_i = ( sy-datum - unix ) * 86400   &quot;days in secs
              +   sy-uzeit(2)       * 3600    &quot;hours in secs
              +   sy-uzeit+2(2)     * 60      &quot;mins in secs
              +   sy-uzeit+4(2)               &quot;secs
              -   diff                        &quot;diff tu UTC in secs
              .

  timestamp = timestamp_i.
  timestamp = timestamp(10). &quot;w/o sign (trailing space)

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="FETCHURL" VERSION="1" LANGU="E" DESCRIPT="fetch URL data" EXPOSURE="2" STATE="1" EDITORDER="25 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="FETCHURL" SCONAME="HOST" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="FETCHURL" SCONAME="URL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="FETCHURL" SCONAME="METHOD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PARVALUE="&apos;POST&apos;"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="FETCHURL" SCONAME="ACCEPT_XML" VERSION="1" LANGU="E" DESCRIPT='Add &quot;Accept: application/xml&quot;' CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BOOLEAN" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="FETCHURL" SCONAME="CONTENT_TYPE_XML" VERSION="1" LANGU="E" DESCRIPT='Add &quot;Content-Type: application/xml&quot;' CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BOOLEAN" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="FETCHURL" SCONAME="CDATA" VERSION="1" LANGU="E" DESCRIPT="Optional CDATA" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="FETCHURL" SCONAME="RESPONSE_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <exception CLSNAME="ZCL_OAUTH" CMPNAME="FETCHURL" SCONAME="ZCX_OAUTH_ERROR" VERSION="1" LANGU="E" DESCRIPT="Twitter API Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000"/>
  <source>method FETCHURL.

  DATA: client       TYPE REF TO if_http_client
      , uri          TYPE string
      , api_host     TYPE zoauth_api_host
      , api_protocol TYPE zoauth_api_protocol
      .

  FIELD-SYMBOLS: &lt;parameter&gt; TYPE zjson_key_value.

*--- create body from parameters ---*
  create_http_body( ).

*--- create HTTP client ---*
  IF host IS INITIAL.
    api_host = get_api_host( ).
  ELSE.
    api_host = host.
  ENDIF.

  api_protocol = get_api_protocol( ).

  cl_http_client=&gt;create(
    EXPORTING
      host   = api_host
      scheme = api_protocol
    IMPORTING
      client = client
    EXCEPTIONS
      argument_not_found = 1
      plugin_not_active  = 2
      internal_error     = 3
      ).

  IF sy-subrc &lt;&gt; 0.
    RAISE EXCEPTION TYPE zcx_oauth_error
      EXPORTING
        textid = zcx_oauth_error=&gt;http_communication_failure.
  ENDIF.

  IF method = &apos;POST&apos;
  AND cdata IS INITIAL.
    uri = url.
  ELSE.
    CONCATENATE
      url
      &apos;?&apos;
      http_body
    INTO uri.
  ENDIF.

  client-&gt;request-&gt;set_header_field(
    name = &apos;~request_uri&apos;
    value = uri
    ).

  client-&gt;request-&gt;set_header_field(
    name  = &apos;~request_method&apos;
    value = method
    ).

  IF content_type_xml IS NOT INITIAL.
    client-&gt;request-&gt;set_header_field(
      name = &apos;Content-Type&apos;
      value = &apos;application/xml&apos;
      ).
  ELSE.
    client-&gt;request-&gt;set_header_field(
      name = &apos;Content-Type&apos;
      value = &apos;application/x-www-form-urlencoded&apos;
      ).
  ENDIF.

  IF accept_xml IS NOT INITIAL.
    client-&gt;request-&gt;set_header_field(
      name = &apos;Accept&apos;
      value = &apos;application/xml&apos;
      ).
  ENDIF.

  IF method = &apos;POST&apos;.
    IF cdata IS NOT INITIAL.
      client-&gt;request-&gt;set_cdata( cdata ).     &quot;send CDATA as body
    ELSE.
      client-&gt;request-&gt;set_cdata( http_body ). &quot;send parameters as body
    ENDIF.
  ENDIF.

  client-&gt;send( EXCEPTIONS http_communication_failure = 8 ).

  IF sy-subrc &lt;&gt; 0.
    client-&gt;close( ).
    RAISE EXCEPTION TYPE zcx_oauth_error
      EXPORTING
        textid = zcx_oauth_error=&gt;http_communication_failure.
  ENDIF.

  client-&gt;receive( EXCEPTIONS http_communication_failure = 8 ).

  IF sy-subrc &lt;&gt; 0.
    client-&gt;close( ).
    RAISE EXCEPTION TYPE zcx_oauth_error
      EXPORTING
        textid = zcx_oauth_error=&gt;http_communication_failure.
  ENDIF.

  response_data = client-&gt;response-&gt;get_cdata( ).
  client-&gt;close( ).

  &quot;*--- trash ---*
  CLEAR: me-&gt;http_body
       , me-&gt;parameters
       , me-&gt;oauth_signature
       .

  check_response( response_data ).

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_API_HOST" VERSION="1" LANGU="E" DESCRIPT="Get API host" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_API_HOST" SCONAME="API_HOST" VERSION="1" LANGU="E" DESCRIPT="OAuth: API host" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZOAUTH_API_HOST"/>
  <source>method GET_API_HOST.

  api_host = me-&gt;api_host.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_API_PROTOCOL" VERSION="1" LANGU="E" DESCRIPT="Get API protocol" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_API_PROTOCOL" SCONAME="API_PROTOCOL" VERSION="1" LANGU="E" DESCRIPT="OAuth: API protocol" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZOAUTH_API_PROTOCOL"/>
  <source>method GET_API_PROTOCOL.

  api_protocol = me-&gt;api_protocol.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_CONSUMER_KEY" VERSION="1" LANGU="E" DESCRIPT="Get consumer key" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_CONSUMER_KEY" SCONAME="OAUTH_CONSUMER_KEY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GET_CONSUMER_KEY.

  oauth_consumer_key = me-&gt;oauth_consumer_key.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_CONSUMER_SECRET" VERSION="1" LANGU="E" DESCRIPT="Get consumer secret" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_CONSUMER_SECRET" SCONAME="OAUTH_CONSUMER_SECRET" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GET_CONSUMER_SECRET.

  oauth_consumer_secret = me-&gt;oauth_consumer_secret.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_INSTANCE" SCONAME="CONSUMER_NAME" VERSION="1" LANGU="E" DESCRIPT="OAuth: Consumer Name" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_CONSUMER_NAME" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_INSTANCE" SCONAME="SCREEN_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_INSTANCE" SCONAME="PASSWORD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_INSTANCE" SCONAME="RO_OAUTH" VERSION="1" LANGU="E" DESCRIPT="OAuth + HTTP helper" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_OAUTH"/>
  <exception CLSNAME="ZCL_OAUTH" CMPNAME="GET_INSTANCE" SCONAME="ZCX_OAUTH_ERROR" VERSION="1" LANGU="E" DESCRIPT="Twitter API Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000"/>
  <source>method GET_INSTANCE.

  IF oauth IS INITIAL.
    CREATE OBJECT oauth
      EXPORTING
        consumer_name = consumer_name
        screen_name   = screen_name
        password      = password.
  ENDIF.

  ro_oauth = oauth.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_OAUTH_SECRET" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_OAUTH_SECRET" SCONAME="OAUTH_SECRET" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GET_OAUTH_SECRET.

  oauth_secret = me-&gt;oauth_secret.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_OAUTH_SIGNATURE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="17 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_OAUTH_SIGNATURE" SCONAME="OAUTH_SIGNATURE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GET_OAUTH_SIGNATURE.

  oauth_signature = me-&gt;oauth_signature.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_OAUTH_TOKEN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_OAUTH_TOKEN" SCONAME="OAUTH_TOKEN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GET_OAUTH_TOKEN.

  oauth_token = me-&gt;oauth_token.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_OAUTH_TOKEN_SECRET" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_OAUTH_TOKEN_SECRET" SCONAME="OAUTH_TOKEN_SECRET" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GET_OAUTH_TOKEN_SECRET.

  oauth_token_secret = me-&gt;oauth_token_secret.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_OAUTH_URL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_OAUTH_URL" SCONAME="OAUTH_URL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GET_OAUTH_URL.

  oauth_url = me-&gt;oauth_url.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_PARAMETERS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="16 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_PARAMETERS" SCONAME="PARAMETERS" VERSION="1" LANGU="E" DESCRIPT="OAuth: HTTP Parameter table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZOAUTH_KEY_VALUE_T"/>
  <source>method GET_PARAMETERS.

  parameters = me-&gt;parameters.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="GET_SIGNATURE_METHOD" VERSION="1" LANGU="E" DESCRIPT="Get Signature Method" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="GET_SIGNATURE_METHOD" SCONAME="SIGNATURE_METHOD" VERSION="1" LANGU="E" DESCRIPT="OAuth: Signature Method" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZOAUTH_SIGNATURE_METHOD"/>
  <source>method GET_SIGNATURE_METHOD.

  signature_method = me-&gt;signature_method.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="HMAC_FUNCTION_EXISTS" VERSION="1" LANGU="E" DESCRIPT="Check SecureStore functions" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="HMAC_FUNCTION_EXISTS" SCONAME="RV_RESULT" VERSION="1" LANGU="E" DESCRIPT="Boolean Variable (X=True, -=False, Space=Unknown)" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="BOOLEAN"/>
  <source>method HMAC_FUNCTION_EXISTS.

  &quot;*--- SecureStore function exists in this release? ---*
  CALL FUNCTION &apos;FUNCTION_EXISTS&apos;
    EXPORTING
      funcname           = &apos;SET_HMAC_KEY&apos;
    EXCEPTIONS
      function_not_exist = 1
      OTHERS             = 2.

  IF sy-subrc = 0.
    rv_result = abap_true.
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="IS_AUTHORIZED" VERSION="1" LANGU="E" DESCRIPT="Is user authorization given?" EXPOSURE="2" STATE="1" EDITORDER="26 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="IS_AUTHORIZED" SCONAME="RESULT" VERSION="1" LANGU="E" DESCRIPT="boolsche Variable (X=true, -=false, space=unknown)" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="BOOLEAN"/>
  <source>method IS_AUTHORIZED.

  IF screen_name IS NOT INITIAL.
    result = &apos;X&apos;.
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="PERCENT_ENCODE" VERSION="1" LANGU="E" DESCRIPT="OAuth URL escaping" EXPOSURE="2" STATE="1" EDITORDER="30 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="PERCENT_ENCODE" SCONAME="UNESCAPED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="PERCENT_ENCODE" SCONAME="ESCAPED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method PERCENT_ENCODE.

  escaped = cl_http_utility=&gt;escape_url( unescaped ).

  &quot;OAuth dictates the only ones you can ignore are: - _ . ~
  &quot;-&gt; these and only these have to stay unescaped
  REPLACE ALL OCCURRENCES OF &apos;%2e&apos; IN escaped WITH &apos;.&apos;.
  REPLACE ALL OCCURRENCES OF &apos;%7e&apos; IN escaped WITH &apos;~&apos;.
  REPLACE ALL OCCURRENCES OF &apos;(&apos; IN escaped WITH &apos;%28&apos;.
  REPLACE ALL OCCURRENCES OF &apos;)&apos; IN escaped WITH &apos;%29&apos;.
  REPLACE ALL OCCURRENCES OF &apos;+&apos; IN escaped WITH &apos;%20&apos;.

  &quot;all codes to upper case
  REPLACE ALL OCCURRENCES OF &apos;%2a&apos; IN escaped WITH &apos;%2A&apos;.
  REPLACE ALL OCCURRENCES OF &apos;%2b&apos; IN escaped WITH &apos;%2B&apos;.
  REPLACE ALL OCCURRENCES OF &apos;%2c&apos; IN escaped WITH &apos;%2C&apos;.
  REPLACE ALL OCCURRENCES OF &apos;%2d&apos; IN escaped WITH &apos;%2D&apos;.
  REPLACE ALL OCCURRENCES OF &apos;%2e&apos; IN escaped WITH &apos;%2E&apos;.
  REPLACE ALL OCCURRENCES OF &apos;%2f&apos; IN escaped WITH &apos;%2F&apos;.

  REPLACE ALL OCCURRENCES OF &apos;%3a&apos; IN escaped WITH &apos;%3A&apos;.
  REPLACE ALL OCCURRENCES OF &apos;%3b&apos; IN escaped WITH &apos;%3B&apos;.
  REPLACE ALL OCCURRENCES OF &apos;%3c&apos; IN escaped WITH &apos;%3C&apos;.
  REPLACE ALL OCCURRENCES OF &apos;%3d&apos; IN escaped WITH &apos;%3D&apos;.
  REPLACE ALL OCCURRENCES OF &apos;%3e&apos; IN escaped WITH &apos;%3E&apos;.
  REPLACE ALL OCCURRENCES OF &apos;%3f&apos; IN escaped WITH &apos;%3F&apos;.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="PREPARE_JAVASCRIPT_SOURCE" VERSION="1" LANGU="E" DESCRIPT="Read Javascript source (NW &lt; 7.01)" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <source>method PREPARE_JAVASCRIPT_SOURCE.

  DATA: sha1_source   TYPE string
      , twibap_source TYPE string
      , mime_url      TYPE string
      , mime_api      TYPE REF TO if_mr_api
      , mime_content  TYPE xstring
      .

*--- load Javascript sources from mime repository ---*
  mime_api = cl_mime_repository_api=&gt;get_api( ).

  mime_url  = &apos;/SAP/PUBLIC/BC/ztwibap/sha1.js&apos;.

  mime_api-&gt;get(
    EXPORTING
      i_url = mime_url
    IMPORTING
      e_content = mime_content
      ).

  CALL FUNCTION &apos;ECATT_CONV_XSTRING_TO_STRING&apos;
    EXPORTING
      im_xstring = mime_content
    IMPORTING
      ex_string  = sha1_source.

  mime_url  = &apos;/SAP/PUBLIC/BC/ztwibap/twibap.js&apos;.

  mime_api-&gt;get(
    EXPORTING
      i_url = mime_url
    IMPORTING
      e_content = mime_content
      ).

  CALL FUNCTION &apos;ECATT_CONV_XSTRING_TO_STRING&apos;
    EXPORTING
      im_xstring = mime_content
    IMPORTING
      ex_string  = twibap_source.

  CONCATENATE
    sha1_source
    twibap_source
  INTO js_source SEPARATED BY cl_abap_char_utilities=&gt;cr_lf.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="READ_CONSUMER_PERS" VERSION="1" LANGU="E" DESCRIPT="Read consumer key and secret persistant" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="READ_CONSUMER_PERS" SCONAME="CONSUMER_NAME" VERSION="1" LANGU="E" DESCRIPT="OAuth: Consumer Name" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_CONSUMER_NAME" PAROPTIONL="X"/>
  <exception CLSNAME="ZCL_OAUTH" CMPNAME="READ_CONSUMER_PERS" SCONAME="ZCX_OAUTH_ERROR" VERSION="1" LANGU="E" DESCRIPT="Twitter API Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000"/>
  <source>method READ_CONSUMER_PERS.

  DATA: consumer TYPE zoauth_consumer.

  &quot;*--- get API keys from database                   ---*
  &quot;*--- (entered with setup report Z_TWA_SETUP_1_API_KEY) ---*
  SELECT SINGLE consumer_key
                consumer_secret
                signature_method
                api_host
                api_protocol
    INTO (me-&gt;oauth_consumer_key,
          me-&gt;oauth_consumer_secret,
          me-&gt;signature_method,
          me-&gt;api_host,
          me-&gt;api_protocol)
    FROM zoauth_consumer
    WHERE consumer_name = consumer_name.

  IF sy-subrc &lt;&gt; 0.
    RAISE EXCEPTION TYPE zcx_oauth_error
      EXPORTING
        textid = zcx_oauth_error=&gt;api_keys_not_found.
  ENDIF.

  IF oauth_consumer_key IS INITIAL.
    RAISE EXCEPTION TYPE zcx_oauth_error
      EXPORTING
        textid = zcx_oauth_error=&gt;consumer_key_empty.
  ENDIF.

  IF oauth_consumer_secret IS INITIAL.
    RAISE EXCEPTION TYPE zcx_oauth_error
      EXPORTING
        textid = zcx_oauth_error=&gt;consumer_secret_empty.
  ENDIF.

  &quot;*--- add dangling ampersand ---*
  CONCATENATE
    me-&gt;oauth_consumer_secret
    &apos;&amp;&apos;
  INTO me-&gt;oauth_consumer_secret.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="READ_USER_PERS" VERSION="1" LANGU="E" DESCRIPT="Set user credentials persistant" EXPOSURE="2" STATE="1" EDITORDER="23 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="READ_USER_PERS" SCONAME="CONSUMER_NAME" VERSION="1" LANGU="E" DESCRIPT="OAuth: Consumer Name" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_CONSUMER_NAME" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="READ_USER_PERS" SCONAME="SCREEN_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="READ_USER_PERS" SCONAME="PASSWORD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <exception CLSNAME="ZCL_OAUTH" CMPNAME="READ_USER_PERS" SCONAME="ZCX_OAUTH_ERROR" VERSION="1" LANGU="E" DESCRIPT="Twitter API Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000"/>
  <source>method READ_USER_PERS.

  DATA: password_hash  TYPE hash160
      , password_hash2 TYPE hash160
      .

  &quot;*--- get user credentials ---*
  &quot;*--- (created with setup report Z_OAuth_SETUP_2_REGISTER_USER) ---*
  SELECT SINGLE password_hash token token_secret
    INTO (password_hash, oauth_token, oauth_token_secret)
    FROM zoauth_user
    WHERE consumer_name = consumer_name
    AND   user_name     = screen_name.

  IF sy-subrc &lt;&gt; 0
  OR oauth_token IS INITIAL
  OR oauth_token_secret IS INITIAL.
    RAISE EXCEPTION TYPE zcx_oauth_error
      EXPORTING
        textid = zcx_oauth_error=&gt;user_not_registered.
  ENDIF.

*--- credentials protected with password? ---*
  IF password_hash IS NOT INITIAL.

    IF password IS INITIAL.
      RAISE EXCEPTION TYPE zcx_oauth_error
      EXPORTING
        textid = zcx_oauth_error=&gt;password_required.
    ENDIF.

    CALL FUNCTION &apos;CALCULATE_HASH_FOR_CHAR&apos;
      EXPORTING
        alg  = &apos;SHA1&apos;
        data = password
      IMPORTING
        hash = password_hash2.

    IF password_hash &lt;&gt; password_hash2.
      RAISE EXCEPTION TYPE zcx_oauth_error
      EXPORTING
        textid = zcx_oauth_error=&gt;wrong_password.
    ENDIF.

  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="SET_API_HOST" VERSION="1" LANGU="E" DESCRIPT="Set API host" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_API_HOST" SCONAME="API_HOST" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method SET_API_HOST.

  me-&gt;api_host = api_host.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="SET_CONSUMER_PERS" VERSION="1" LANGU="E" DESCRIPT="Set consumer key and secret persistant" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_CONSUMER_PERS" SCONAME="CONSUMER_NAME" VERSION="1" LANGU="E" DESCRIPT="OAuth: Consumer Name" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_CONSUMER_NAME" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_CONSUMER_PERS" SCONAME="OAUTH_CONSUMER_KEY" VERSION="1" LANGU="E" DESCRIPT="OAuth: Consumer Key" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_CONSUMER_KEY"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_CONSUMER_PERS" SCONAME="OAUTH_CONSUMER_SECRET" VERSION="1" LANGU="E" DESCRIPT="OAuth: Consumer Secret" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_CONSUMER_SECRET"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_CONSUMER_PERS" SCONAME="SIGNATURE_METHOD" VERSION="1" LANGU="E" DESCRIPT="OAuth: Signature Method" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_SIGNATURE_METHOD"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_CONSUMER_PERS" SCONAME="API_HOST" VERSION="1" LANGU="E" DESCRIPT="OAuth: API host" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_API_HOST"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_CONSUMER_PERS" SCONAME="API_PROTOCOL" VERSION="1" LANGU="E" DESCRIPT="OAuth: API protocol" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_API_PROTOCOL"/>
  <source>method SET_CONSUMER_PERS.

  DATA: consumer TYPE zoauth_consumer.

  consumer-consumer_name    = consumer_name.
  consumer-consumer_key     = oauth_consumer_key.
  consumer-consumer_secret  = oauth_consumer_secret.
  consumer-signature_method = signature_method.
  consumer-api_host         = api_host.
  consumer-api_protocol     = api_protocol.

  MODIFY zoauth_consumer FROM consumer.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="SET_OAUTH_SECRET" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_OAUTH_SECRET" SCONAME="OAUTH_SECRET" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method SET_OAUTH_SECRET.

  me-&gt;oauth_secret = oauth_secret.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="SET_OAUTH_TOKEN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_OAUTH_TOKEN" SCONAME="OAUTH_TOKEN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method SET_OAUTH_TOKEN.

  me-&gt;oauth_token = oauth_token.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="SET_OAUTH_TOKEN_SECRET" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="21 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_OAUTH_TOKEN_SECRET" SCONAME="OAUTH_TOKEN_SECRET" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method SET_OAUTH_TOKEN_SECRET.

  me-&gt;oauth_token_secret = oauth_token_secret.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="SET_OAUTH_URL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_OAUTH_URL" SCONAME="OAUTH_URL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method SET_OAUTH_URL.

  me-&gt;oauth_url =  oauth_url.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="SET_PARAMETERS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_PARAMETERS" SCONAME="PARAMETERS" VERSION="1" LANGU="E" DESCRIPT="OAuth: HTTP Parameter table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_KEY_VALUE_T"/>
  <source>method SET_PARAMETERS.

  me-&gt;parameters = parameters.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="SET_USER_PERS" VERSION="1" LANGU="E" DESCRIPT="Set user credentials persistant" EXPOSURE="2" STATE="1" EDITORDER="22 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_USER_PERS" SCONAME="CONSUMER_NAME" VERSION="1" LANGU="E" DESCRIPT="OAuth: Consumer Name" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH_CONSUMER_NAME" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_USER_PERS" SCONAME="SCREEN_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_USER_PERS" SCONAME="PASSWORD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_USER_PERS" SCONAME="OAUTH_TOKEN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SET_USER_PERS" SCONAME="OAUTH_TOKEN_SECRET" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method SET_USER_PERS.

  DATA: password_hash TYPE hash160
      , user          TYPE zoauth_user
      .

*--- protect credentials with password? ---*
  IF password IS NOT INITIAL.

    CALL FUNCTION &apos;CALCULATE_HASH_FOR_CHAR&apos;
      EXPORTING
        alg  = &apos;SHA1&apos;
        data = password
      IMPORTING
        hash = password_hash.

  ENDIF.

  user-consumer_name = consumer_name.
  user-user_name     = screen_name.
  user-password_hash = password_hash.
  user-token         = oauth_token.
  user-token_secret  = oauth_token_secret.

  MODIFY zoauth_user FROM user.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="SIGN_MESSAGE" VERSION="1" LANGU="E" DESCRIPT="Sign message" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SIGN_MESSAGE" SCONAME="METHOD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PARVALUE="&apos;POST&apos;"/>
  <source>method SIGN_MESSAGE.

  &quot;*--- depending on NW release, use JavaScript or SecureStore functions ---*
  IF hmac_function_exists( ) = abap_true.
    sign_message_hmac( method ).
  ELSE.
    sign_message_js( method ).
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="SIGN_MESSAGE_HMAC" VERSION="1" LANGU="E" DESCRIPT="Sign message (using SecureStore, &gt;= 7.01)" EXPOSURE="2" STATE="1" EDITORDER="34 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SIGN_MESSAGE_HMAC" SCONAME="METHOD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PARVALUE="&apos;POST&apos;"/>
  <source>method SIGN_MESSAGE_HMAC.

  DATA: hashx         TYPE hash160x
      , secret_hashed TYPE xstring
      , basestring    TYPE string
      , signature     TYPE c LENGTH 88 &quot;hash512_base_64
      .

  &quot;*--- FM &apos;SET_HMAC_KEY&apos; doesn&apos;t accept keys &gt; 81 chars ---*
  IF STRLEN( me-&gt;oauth_secret ) &lt; 82.

    &quot;*--- set secret to SecureStorage ---*
    CALL FUNCTION &apos;SET_HMAC_KEY&apos;
      EXPORTING
        keycstr            = me-&gt;oauth_secret
        client_independent = space.

  ELSE.

    &quot;*--- hash the secret ---*
    CALL FUNCTION &apos;CALCULATE_HASH_FOR_CHAR&apos;
      EXPORTING
        data  = me-&gt;oauth_secret
      IMPORTING
        hashx = hashx.

    secret_hashed = hashx.

    &quot;*--- set hashed secret to SecureStorage ---*
    CALL FUNCTION &apos;SET_HMAC_KEY&apos;
      EXPORTING
        keyxstr            = secret_hashed
        client_independent = space.

  ENDIF.

  &quot;*--- calculate base64 signature ---*
  basestring = create_basestring( method ).

  CALL FUNCTION &apos;CALCULATE_HMAC_FOR_CHAR&apos;
    EXPORTING
      alg            = &apos;SHA1&apos;
      data           = basestring
      key_must_exist = &apos;X&apos;
    IMPORTING
      hmacbase64     = signature.

  &quot;*--- clear secret in SecureStore ---*
  CALL FUNCTION &apos;SET_HMAC_KEY&apos;
    EXPORTING
      keycstr            = &apos;void&apos;
      client_independent = space.

  me-&gt;oauth_signature = signature.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH" CMPNAME="SIGN_MESSAGE_JS" VERSION="1" LANGU="E" DESCRIPT="Sign message with Javascript (NW &lt; 7.01)" EXPOSURE="2" STATE="1" EDITORDER="32 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH" CMPNAME="SIGN_MESSAGE_JS" SCONAME="METHOD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="SE38_UWE" CREATEDON="20101217" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PARVALUE="&apos;POST&apos;"/>
  <source>method SIGN_MESSAGE_JS.

  DATA: js_processor TYPE REF TO cl_java_script
      , basestring   TYPE string
      , return_value TYPE string
      .

*--- compile source and bind variables ---*
  js_processor = cl_java_script=&gt;create( ).

  js_processor-&gt;bind(
    EXPORTING
      name_obj  = &apos;abap&apos;
      name_prop = &apos;oauth_secret&apos;
    CHANGING
      data      = me-&gt;oauth_secret
      ).

  basestring = create_basestring( method ).

  js_processor-&gt;bind(
    EXPORTING
      name_obj  = &apos;abap&apos;
      name_prop = &apos;basestring&apos;
    CHANGING
      data      = basestring
      ).

  js_processor-&gt;bind(
    EXPORTING
      name_obj  = &apos;abap&apos;
      name_prop = &apos;oauth_signature&apos;
    CHANGING
      data      = me-&gt;oauth_signature
      ).

  return_value = js_processor-&gt;evaluate( js_source ).

endmethod.</source>
 </method>
</CLAS>
